# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreatePermissionInput {
  description: String!
  id: String
  name: String!
}

input CreateProfileInput {
  canOffer: String
  city: String
  coachingDomains: [String!]!
  coachingType: String
  company: String
  country: String
  currentPost: String
  domainExpertise: Int
  firstName: String
  hoursPerMonth: Int
  lastName: String
  linkedin: String
  phoneNumber: String
  picture: String
  professionalBg: String
  sector: String
  selfDescription: String
  wantedDomain: String
  website: String
  whyNeedCoaching: String
  yearsOfExperience: Int
}

input CreateRequestInput {
  description: String!
  excerpt: String!
  from: String!
  id: String
  title: String!
  to: String!
}

input CreateRoleInput {
  description: String!
  id: String
  name: String!
  permissions: [RolePermissionInput!]!
}

input CreateUserInput {
  email: String!
  id: String
  isAdmin: Boolean
  password: String
  profile: CreateProfileInput
  provider: String!
  providerId: String
  role: String
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GetPermissions {
  data: [Permission!]!
  totalCount: Int!
}

type Mutation {
  createPermission(createPermissionInput: CreatePermissionInput!): Permission!
  createRequest(createRequestInput: CreateRequestInput!): Request!
  createRole(createRoleInput: CreateRoleInput!): Role!
  createUser(createUserInput: CreateUserInput!): User!
  removePermission(id: String!): Permission!
  removeRequest(id: String!): Request!
  removeRole(id: String!): Role!
  removeUser(id: String!): User!
  updatePermission(updatePermissionInput: UpdatePermissionInput!): Permission!
  updateProfile(updateProfileInput: UpdateProfileInput!): Profile!
  updateRequest(updateRequestInput: UpdateRequestInput!): Request!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Permission {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  updatedAt: DateTime!
}

type Profile {
  canOffer: String
  city: String
  coachingDomains: [String!]!
  coachingType: String
  company: String
  country: String
  createdAt: DateTime!
  currentPost: String
  domainExpertise: Int
  firstName: String
  hoursPerMonth: Int
  id: String!
  lastName: String
  linkedin: String
  phoneNumber: String
  picture: String
  professionalBg: String
  sector: String
  selfDescription: String
  updatedAt: DateTime!
  wantedDomain: String
  website: String
  whyNeedCoaching: String
  yearsOfExperience: Int
}

type Query {
  permission(id: String!): Permission!
  permissions(skip: Int, take: Int): GetPermissions!
  profile(id: Int!): Profile!
  request(id: String!): Request!
  requests(from: String, status: String, to: String): [Request!]!
  role(id: String!): Role!
  roles: [Role!]!
  user(id: String!): User!
  userRequests(id: String!): User!
  users: [User!]!
  usersByRole(id: String!): [User!]!
}

type Request {
  createdAt: DateTime!
  description: String
  excerpt: String!
  from: User!
  id: String!
  status: String
  title: String!
  to: User!
  updatedAt: DateTime!
}

type Role {
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  permissions: [Permission!]!
  updatedAt: DateTime!
  users: [User!]!
}

input RolePermissionInput {
  id: String!
}

type Subscription {
  createdAt: DateTime!
  id: String!
  subscribedTo: User!
  subscriber: User!
  updatedAt: DateTime!
}

input UpdatePermissionInput {
  description: String!
  id: String
  name: String!
}

input UpdateProfileInput {
  canOffer: String
  city: String
  coachingDomains: [String!]!
  coachingType: String
  company: String
  country: String
  currentPost: String
  domainExpertise: Int
  firstName: String
  hoursPerMonth: Int
  id: String
  lastName: String
  linkedin: String
  phoneNumber: String
  picture: String
  professionalBg: String
  sector: String
  selfDescription: String
  wantedDomain: String
  website: String
  whyNeedCoaching: String
  yearsOfExperience: Int
}

input UpdateRequestInput {
  description: String
  excerpt: String
  from: String
  id: String!
  status: String
  title: String
  to: String
}

input UpdateRoleInput {
  description: String!
  id: String
  name: String!
  permissions: [RolePermissionInput!]!
}

input UpdateUserInput {
  id: String
  role: String
}

type User {
  createdAt: DateTime!
  email: String
  id: String!
  isAdmin: Boolean
  password: String
  profile: Profile!
  provider: String
  providerId: String
  requestsFrom: [Request!]!
  requestsTo: [Request!]!
  role: Role
  subscribers: [Subscription!]!
  subscriptions: [Subscription!]!
  updatedAt: DateTime!
  username: String
}
